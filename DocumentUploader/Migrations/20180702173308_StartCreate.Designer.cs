// <auto-generated />
using DocumentUploader.Data;
using DocumentUploader.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DocumentUploader.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20180702173308_StartCreate")]
    partial class StartCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DocumentUploader.Models.Account", b =>
                {
                    b.Property<string>("AccountId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Subscription");

                    b.HasKey("AccountId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("DocumentUploader.Models.File", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<string>("Email");

                    b.Property<string>("Format");

                    b.Property<string>("Name");

                    b.HasKey("FileId");

                    b.HasIndex("Email");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("DocumentUploader.Models.User", b =>
                {
                    b.Property<string>("Email")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccountId");

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("Email");

                    b.HasIndex("AccountId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DocumentUploader.Models.File", b =>
                {
                    b.HasOne("DocumentUploader.Models.User")
                        .WithMany("Files")
                        .HasForeignKey("Email");
                });

            modelBuilder.Entity("DocumentUploader.Models.User", b =>
                {
                    b.HasOne("DocumentUploader.Models.Account")
                        .WithMany("Users")
                        .HasForeignKey("AccountId");
                });
#pragma warning restore 612, 618
        }
    }
}
